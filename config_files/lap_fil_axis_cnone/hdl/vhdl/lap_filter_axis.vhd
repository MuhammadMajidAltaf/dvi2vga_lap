-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2014.4
-- Copyright (C) 2014 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity lap_filter_axis is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    lap_fil_enable_V : IN STD_LOGIC_VECTOR (0 downto 0);
    ins_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    ins_TVALID : IN STD_LOGIC;
    ins_TREADY : OUT STD_LOGIC;
    ins_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    ins_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    ins_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    ins_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    ins_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    ins_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    outs_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    outs_TVALID : OUT STD_LOGIC;
    outs_TREADY : IN STD_LOGIC;
    outs_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    outs_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    outs_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    outs_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    outs_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    outs_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of lap_filter_axis is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "lap_filter_axis,hls_ip_2014_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.520000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=5,HLS_SYN_FF=336,HLS_SYN_LUT=601}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_pp0_stg0_fsm_2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_st10_fsm_3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv20_E1000 : STD_LOGIC_VECTOR (19 downto 0) := "11100001000000000000";
    constant ap_const_lv20_1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_const_lv11_500 : STD_LOGIC_VECTOR (10 downto 0) := "10100000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv11_4FF : STD_LOGIC_VECTOR (10 downto 0) := "10011111111";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv16_96 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010010110";
    constant ap_const_lv14_1D : STD_LOGIC_VECTOR (13 downto 0) := "00000000011101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv16_4D : STD_LOGIC_VECTOR (15 downto 0) := "0000000001001101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv32_10101 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010000000100000001";
    constant ap_const_lv32_FFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "00000000111111111111111111111111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

    signal ap_rst_n_inv : STD_LOGIC;
    signal indvar_flatten_reg_292 : STD_LOGIC_VECTOR (19 downto 0);
    signal y_reg_303 : STD_LOGIC_VECTOR (9 downto 0);
    signal x_reg_314 : STD_LOGIC_VECTOR (10 downto 0);
    signal lap_fil_enable_V_read_read_fu_210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_47 : BOOLEAN;
    signal grp_fu_338_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_57 : BOOLEAN;
    signal exitcond_flatten_fu_389_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_925 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_69 : BOOLEAN;
    signal lap_user_V_fu_471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_77 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_sig_ioackin_outs_TREADY : STD_LOGIC;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond_flatten_reg_925_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_flatten_reg_925_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_395_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal y_mid2_fu_421_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_mid2_reg_934 : STD_LOGIC_VECTOR (9 downto 0);
    signal lap_user_V_reg_939 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_lap_user_V_reg_939_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_lap_user_V_reg_939_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_lap_user_V_reg_939_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_lap_user_V_reg_939_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_lap_user_V_reg_939_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal line_buf_0_addr_reg_944 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buf_1_addr_reg_950 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_ppstg_line_buf_1_addr_reg_950_pp0_it1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_ppstg_line_buf_1_addr_reg_950_pp0_it2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_reg_ppstg_line_buf_1_addr_reg_950_pp0_it3 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_cond_13_fu_504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_13_reg_956 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_13_reg_956_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_13_reg_956_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_13_reg_956_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal lap_last_V_fu_510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lap_last_V_reg_961 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_lap_last_V_reg_961_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_lap_last_V_reg_961_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_lap_last_V_reg_961_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_lap_last_V_reg_961_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_lap_last_V_reg_961_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_1_fu_516_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal b_fu_526_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_reg_971 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buf_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buf_0_load_reg_976 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buf_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buf_1_load_reg_982 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_line_buf_1_load_reg_982_pp0_it2 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_reg_988 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_r_reg_988_pp0_it2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_i_fu_554_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_i_reg_993 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp1_fu_643_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp1_reg_998 : STD_LOGIC_VECTOR (15 downto 0);
    signal sum3_neg_i_fu_690_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum3_neg_i_reg_1003 : STD_LOGIC_VECTOR (31 downto 0);
    signal pix_mat_2_1_1_reg_1008 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_i_fu_763_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_i_reg_1014 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_1_fu_777_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_fu_800_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1024 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_icmp_reg_1024_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_812_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_1029 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_1029_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal line_buf_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buf_0_ce0 : STD_LOGIC;
    signal line_buf_0_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buf_0_ce1 : STD_LOGIC;
    signal line_buf_0_we1 : STD_LOGIC;
    signal line_buf_0_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buf_0_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buf_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buf_1_ce0 : STD_LOGIC;
    signal line_buf_1_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buf_1_ce1 : STD_LOGIC;
    signal line_buf_1_we1 : STD_LOGIC;
    signal line_buf_1_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buf_1_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_phi_fu_307_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_5_fu_482_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal pix_mat_2_1_fu_158 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_mat_0_0_fu_162 : STD_LOGIC_VECTOR (23 downto 0);
    signal pix_mat_0_1_fu_166 : STD_LOGIC_VECTOR (23 downto 0);
    signal pix_mat_0_1_1_fu_621_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal pix_mat_2_0_fu_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal pix_mat_1_0_fu_174 : STD_LOGIC_VECTOR (23 downto 0);
    signal pix_mat_1_1_fu_178 : STD_LOGIC_VECTOR (23 downto 0);
    signal pix_mat_1_1_1_fu_627_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_user_V_2_fu_182 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_V_3_fu_186 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_keep_V_3_fu_190 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_strb_V_3_fu_194 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_last_V_4_fu_198 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_id_V_3_fu_202 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_dest_V_3_fu_206 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_V_4_fu_828_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ioackin_outs_TREADY : STD_LOGIC := '0';
    signal exitcond_fu_401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_s_fu_415_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_fu_429_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_mid2_fu_407_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_3_fu_445_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_6_fu_455_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_449_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_2_fu_463_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_12_fu_488_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp2_fu_498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp1_fu_439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal g_fu_530_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_i_fu_554_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_i_fu_633_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_i_fu_633_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_4_i_cast_fu_639_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_fu_648_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal pix_mat_0_1_cast_fu_600_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal pix_mat_0_0_cast_fu_604_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp2_fu_660_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal pix_mat_0_2_cast6_fu_624_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal pix_mat_1_0_cast_fu_596_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp3_fu_670_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp3_cast_fu_676_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp2_cast_fu_666_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sum2_i_fu_680_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_i1_fu_656_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum2_i_cast_fu_686_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_i_fu_731_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_i_fu_731_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_f_fu_737_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal pix_mat_1_2_fu_725_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i1_12_fu_752_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal pix_mat_2_0_cast_fu_712_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_i_fu_757_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal pix_mat_2_1_cast_fu_716_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_4_cast_fu_774_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_790_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_806_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_806_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_10_fu_782_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_824_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel4_cast_fu_817_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_806_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_806_ce : STD_LOGIC;
    signal ap_sig_cseq_ST_st10_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_646 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_i_fu_731_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_i_fu_554_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_i_fu_633_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_sig_bdd_265 : BOOLEAN;
    signal ap_sig_bdd_681 : BOOLEAN;

    component lap_filter_axis_mul_32s_18ns_32_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component lap_filter_axis_line_buf_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    line_buf_0_U : component lap_filter_axis_line_buf_0
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buf_0_address0,
        ce0 => line_buf_0_ce0,
        q0 => line_buf_0_q0,
        address1 => line_buf_0_address1,
        ce1 => line_buf_0_ce1,
        we1 => line_buf_0_we1,
        d1 => line_buf_0_d1,
        q1 => line_buf_0_q1);

    line_buf_1_U : component lap_filter_axis_line_buf_0
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buf_1_address0,
        ce0 => line_buf_1_ce0,
        q0 => line_buf_1_q0,
        address1 => line_buf_1_address1,
        ce1 => line_buf_1_ce1,
        we1 => line_buf_1_we1,
        d1 => line_buf_1_d1,
        q1 => line_buf_1_q1);

    lap_filter_axis_mul_32s_18ns_32_3_U0 : component lap_filter_axis_mul_32s_18ns_32_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 18,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_806_p0,
        din1 => grp_fu_806_p1,
        ce => grp_fu_806_ce,
        dout => grp_fu_806_p2);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_outs_TREADY assign process. --
    ap_reg_ioackin_outs_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_outs_TREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))))) or (not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))))))) then 
                    ap_reg_ioackin_outs_TREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_logic_1 = outs_TREADY)) or (not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and not((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_logic_1 = outs_TREADY)))) then 
                    ap_reg_ioackin_outs_TREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not((exitcond_flatten_fu_389_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ins_TVALID = ap_const_logic_0)) and not((grp_fu_338_p1 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ins_TVALID = ap_const_logic_0)) and not((grp_fu_338_p1 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it4 assign process. --
    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))))) then
                    if (not((ap_const_logic_1 = ap_reg_ppiten_pp0_it2))) then 
                        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
                        ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it5 assign process. --
    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it6 assign process. --
    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ins_TVALID = ap_const_logic_0)) and not((grp_fu_338_p1 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- indvar_flatten_reg_292 assign process. --
    indvar_flatten_reg_292_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ins_TVALID = ap_const_logic_0)) and not((grp_fu_338_p1 = ap_const_lv1_0)))) then 
                indvar_flatten_reg_292 <= ap_const_lv20_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond_flatten_fu_389_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then 
                indvar_flatten_reg_292 <= indvar_flatten_next_fu_395_p2;
            end if; 
        end if;
    end process;

    -- tmp_user_V_2_fu_182 assign process. --
    tmp_user_V_2_fu_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond_flatten_fu_389_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = lap_user_V_fu_471_p2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then 
                tmp_user_V_2_fu_182 <= ins_TUSER;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ins_TVALID = ap_const_logic_0)) and not((grp_fu_338_p1 = ap_const_lv1_0)))) then 
                tmp_user_V_2_fu_182 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    -- x_reg_314 assign process. --
    x_reg_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ins_TVALID = ap_const_logic_0)) and not((grp_fu_338_p1 = ap_const_lv1_0)))) then 
                x_reg_314 <= ap_const_lv11_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond_flatten_fu_389_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then 
                x_reg_314 <= x_1_fu_516_p2;
            end if; 
        end if;
    end process;

    -- y_reg_303 assign process. --
    y_reg_303_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ins_TVALID = ap_const_logic_0)) and not((grp_fu_338_p1 = ap_const_lv1_0)))) then 
                y_reg_303 <= ap_const_lv10_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond_flatten_reg_925 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then 
                y_reg_303 <= y_mid2_reg_934;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then
                ap_reg_ppstg_exitcond_flatten_reg_925_pp0_it1 <= exitcond_flatten_reg_925;
                ap_reg_ppstg_lap_last_V_reg_961_pp0_it1 <= lap_last_V_reg_961;
                ap_reg_ppstg_lap_user_V_reg_939_pp0_it1 <= lap_user_V_reg_939;
                ap_reg_ppstg_line_buf_1_addr_reg_950_pp0_it1 <= line_buf_1_addr_reg_950;
                ap_reg_ppstg_or_cond_13_reg_956_pp0_it1 <= or_cond_13_reg_956;
                exitcond_flatten_reg_925 <= exitcond_flatten_fu_389_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))))) then
                ap_reg_ppstg_exitcond_flatten_reg_925_pp0_it2 <= ap_reg_ppstg_exitcond_flatten_reg_925_pp0_it1;
                ap_reg_ppstg_icmp_reg_1024_pp0_it5 <= icmp_reg_1024;
                ap_reg_ppstg_lap_last_V_reg_961_pp0_it2 <= ap_reg_ppstg_lap_last_V_reg_961_pp0_it1;
                ap_reg_ppstg_lap_last_V_reg_961_pp0_it3 <= ap_reg_ppstg_lap_last_V_reg_961_pp0_it2;
                ap_reg_ppstg_lap_last_V_reg_961_pp0_it4 <= ap_reg_ppstg_lap_last_V_reg_961_pp0_it3;
                ap_reg_ppstg_lap_last_V_reg_961_pp0_it5 <= ap_reg_ppstg_lap_last_V_reg_961_pp0_it4;
                ap_reg_ppstg_lap_user_V_reg_939_pp0_it2 <= ap_reg_ppstg_lap_user_V_reg_939_pp0_it1;
                ap_reg_ppstg_lap_user_V_reg_939_pp0_it3 <= ap_reg_ppstg_lap_user_V_reg_939_pp0_it2;
                ap_reg_ppstg_lap_user_V_reg_939_pp0_it4 <= ap_reg_ppstg_lap_user_V_reg_939_pp0_it3;
                ap_reg_ppstg_lap_user_V_reg_939_pp0_it5 <= ap_reg_ppstg_lap_user_V_reg_939_pp0_it4;
                ap_reg_ppstg_line_buf_1_addr_reg_950_pp0_it2 <= ap_reg_ppstg_line_buf_1_addr_reg_950_pp0_it1;
                ap_reg_ppstg_line_buf_1_addr_reg_950_pp0_it3 <= ap_reg_ppstg_line_buf_1_addr_reg_950_pp0_it2;
                ap_reg_ppstg_line_buf_1_load_reg_982_pp0_it2 <= line_buf_1_load_reg_982;
                ap_reg_ppstg_or_cond_13_reg_956_pp0_it2 <= ap_reg_ppstg_or_cond_13_reg_956_pp0_it1;
                ap_reg_ppstg_or_cond_13_reg_956_pp0_it3 <= ap_reg_ppstg_or_cond_13_reg_956_pp0_it2;
                ap_reg_ppstg_or_cond_reg_1029_pp0_it5 <= or_cond_reg_1029;
                ap_reg_ppstg_r_reg_988_pp0_it2 <= r_reg_988;
                icmp_reg_1024 <= icmp_fu_800_p2;
                or_cond_reg_1029 <= or_cond_fu_812_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond_flatten_reg_925 = ap_const_lv1_0) and not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then
                b_reg_971 <= b_fu_526_p1;
                line_buf_0_load_reg_976 <= line_buf_0_q0;
                line_buf_1_load_reg_982 <= line_buf_1_q0;
                r_reg_988 <= tmp_data_V_3_fu_186(23 downto 16);
                tmp_3_i_reg_993(1) <= tmp_3_i_fu_554_p2(1);
    tmp_3_i_reg_993(2) <= tmp_3_i_fu_554_p2(2);
    tmp_3_i_reg_993(3) <= tmp_3_i_fu_554_p2(3);
    tmp_3_i_reg_993(4) <= tmp_3_i_fu_554_p2(4);
    tmp_3_i_reg_993(5) <= tmp_3_i_fu_554_p2(5);
    tmp_3_i_reg_993(6) <= tmp_3_i_fu_554_p2(6);
    tmp_3_i_reg_993(7) <= tmp_3_i_fu_554_p2(7);
    tmp_3_i_reg_993(8) <= tmp_3_i_fu_554_p2(8);
    tmp_3_i_reg_993(9) <= tmp_3_i_fu_554_p2(9);
    tmp_3_i_reg_993(10) <= tmp_3_i_fu_554_p2(10);
    tmp_3_i_reg_993(11) <= tmp_3_i_fu_554_p2(11);
    tmp_3_i_reg_993(12) <= tmp_3_i_fu_554_p2(12);
    tmp_3_i_reg_993(13) <= tmp_3_i_fu_554_p2(13);
    tmp_3_i_reg_993(14) <= tmp_3_i_fu_554_p2(14);
    tmp_3_i_reg_993(15) <= tmp_3_i_fu_554_p2(15);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond_flatten_fu_389_p2 = ap_const_lv1_0) and not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then
                lap_last_V_reg_961 <= lap_last_V_fu_510_p2;
                lap_user_V_reg_939 <= lap_user_V_fu_471_p2;
                line_buf_0_addr_reg_944 <= tmp_5_fu_482_p1(11 - 1 downto 0);
                line_buf_1_addr_reg_950 <= tmp_5_fu_482_p1(11 - 1 downto 0);
                or_cond_13_reg_956 <= or_cond_13_fu_504_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then
                pix_mat_0_0_fu_162(0) <= pix_mat_0_1_fu_166(0);
    pix_mat_0_0_fu_162(1) <= pix_mat_0_1_fu_166(1);
    pix_mat_0_0_fu_162(2) <= pix_mat_0_1_fu_166(2);
    pix_mat_0_0_fu_162(3) <= pix_mat_0_1_fu_166(3);
    pix_mat_0_0_fu_162(4) <= pix_mat_0_1_fu_166(4);
    pix_mat_0_0_fu_162(5) <= pix_mat_0_1_fu_166(5);
    pix_mat_0_0_fu_162(6) <= pix_mat_0_1_fu_166(6);
    pix_mat_0_0_fu_162(7) <= pix_mat_0_1_fu_166(7);
                pix_mat_1_0_fu_174(0) <= pix_mat_1_1_fu_178(0);
    pix_mat_1_0_fu_174(1) <= pix_mat_1_1_fu_178(1);
    pix_mat_1_0_fu_174(2) <= pix_mat_1_1_fu_178(2);
    pix_mat_1_0_fu_174(3) <= pix_mat_1_1_fu_178(3);
    pix_mat_1_0_fu_174(4) <= pix_mat_1_1_fu_178(4);
    pix_mat_1_0_fu_174(5) <= pix_mat_1_1_fu_178(5);
    pix_mat_1_0_fu_174(6) <= pix_mat_1_1_fu_178(6);
    pix_mat_1_0_fu_174(7) <= pix_mat_1_1_fu_178(7);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_925_pp0_it1))) then
                pix_mat_0_1_fu_166(0) <= pix_mat_0_1_1_fu_621_p1(0);
    pix_mat_0_1_fu_166(1) <= pix_mat_0_1_1_fu_621_p1(1);
    pix_mat_0_1_fu_166(2) <= pix_mat_0_1_1_fu_621_p1(2);
    pix_mat_0_1_fu_166(3) <= pix_mat_0_1_1_fu_621_p1(3);
    pix_mat_0_1_fu_166(4) <= pix_mat_0_1_1_fu_621_p1(4);
    pix_mat_0_1_fu_166(5) <= pix_mat_0_1_1_fu_621_p1(5);
    pix_mat_0_1_fu_166(6) <= pix_mat_0_1_1_fu_621_p1(6);
    pix_mat_0_1_fu_166(7) <= pix_mat_0_1_1_fu_621_p1(7);
                pix_mat_1_1_fu_178(0) <= pix_mat_1_1_1_fu_627_p1(0);
    pix_mat_1_1_fu_178(1) <= pix_mat_1_1_1_fu_627_p1(1);
    pix_mat_1_1_fu_178(2) <= pix_mat_1_1_1_fu_627_p1(2);
    pix_mat_1_1_fu_178(3) <= pix_mat_1_1_1_fu_627_p1(3);
    pix_mat_1_1_fu_178(4) <= pix_mat_1_1_1_fu_627_p1(4);
    pix_mat_1_1_fu_178(5) <= pix_mat_1_1_1_fu_627_p1(5);
    pix_mat_1_1_fu_178(6) <= pix_mat_1_1_1_fu_627_p1(6);
    pix_mat_1_1_fu_178(7) <= pix_mat_1_1_1_fu_627_p1(7);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then
                pix_mat_2_0_fu_170 <= pix_mat_2_1_fu_158;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_925_pp0_it2))) then
                pix_mat_2_1_1_reg_1008 <= y_f_fu_737_p2(15 downto 8);
                tmp_7_i_reg_1014 <= tmp_7_i_fu_763_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_925_pp0_it2))) then
                pix_mat_2_1_fu_158 <= y_f_fu_737_p2(15 downto 8);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_925_pp0_it1))) then
                sum3_neg_i_reg_1003 <= sum3_neg_i_fu_690_p2;
                tmp1_reg_998 <= tmp1_fu_643_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ins_TVALID = ap_const_logic_0)) and not((grp_fu_338_p1 = ap_const_lv1_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond_flatten_fu_389_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = lap_user_V_fu_471_p2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))))))) then
                tmp_data_V_3_fu_186 <= ins_TDATA;
                tmp_dest_V_3_fu_206 <= ins_TDEST;
                tmp_id_V_3_fu_202 <= ins_TID;
                tmp_keep_V_3_fu_190 <= ins_TKEEP;
                tmp_last_V_4_fu_198 <= ins_TLAST;
                tmp_strb_V_3_fu_194 <= ins_TSTRB;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond_flatten_fu_389_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then
                y_mid2_reg_934 <= y_mid2_fu_421_p3;
            end if;
        end if;
    end process;
    tmp_3_i_reg_993(0) <= '0';
    pix_mat_0_0_fu_162(23 downto 8) <= "0000000000000000";
    pix_mat_0_1_fu_166(23 downto 8) <= "0000000000000000";
    pix_mat_1_0_fu_174(23 downto 8) <= "0000000000000000";
    pix_mat_1_1_fu_178(23 downto 8) <= "0000000000000000";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ins_TVALID, lap_fil_enable_V_read_read_fu_210_p2, ap_CS_fsm, grp_fu_338_p1, exitcond_flatten_reg_925, ap_sig_bdd_77, ap_reg_ppiten_pp0_it0, ap_sig_ioackin_outs_TREADY, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it5, ap_reg_ppiten_pp0_it6)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when ap_ST_st2_fsm_1 => 
                if ((not((ins_TVALID = ap_const_logic_0)) and not((grp_fu_338_p1 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                elsif ((not((ins_TVALID = ap_const_logic_0)) and (grp_fu_338_p1 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_pp0_stg0_fsm_2 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it4)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it5))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it4))))) then
                    ap_NS_fsm <= ap_ST_st10_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_st10_fsm_3 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_return <= ap_const_lv32_0;

    -- ap_rst_n_inv assign process. --
    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    -- ap_sig_bdd_265 assign process. --
    ap_sig_bdd_265_assign_proc : process(lap_fil_enable_V_read_read_fu_210_p2, exitcond_flatten_reg_925, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1)
    begin
                ap_sig_bdd_265 <= ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1));
    end process;


    -- ap_sig_bdd_47 assign process. --
    ap_sig_bdd_47_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_47 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_57 assign process. --
    ap_sig_bdd_57_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_57 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_646 assign process. --
    ap_sig_bdd_646_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_646 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_bdd_681 assign process. --
    ap_sig_bdd_681_assign_proc : process(lap_fil_enable_V_read_read_fu_210_p2, ap_reg_ppiten_pp0_it6)
    begin
                ap_sig_bdd_681 <= (not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6));
    end process;


    -- ap_sig_bdd_69 assign process. --
    ap_sig_bdd_69_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_69 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_77 assign process. --
    ap_sig_bdd_77_assign_proc : process(ins_TVALID, exitcond_flatten_fu_389_p2, lap_user_V_fu_471_p2)
    begin
                ap_sig_bdd_77 <= ((ins_TVALID = ap_const_logic_0) and (exitcond_flatten_fu_389_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = lap_user_V_fu_471_p2));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_2 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_2_assign_proc : process(ap_sig_bdd_69)
    begin
        if (ap_sig_bdd_69) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st10_fsm_3 assign process. --
    ap_sig_cseq_ST_st10_fsm_3_assign_proc : process(ap_sig_bdd_646)
    begin
        if (ap_sig_bdd_646) then 
            ap_sig_cseq_ST_st10_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_47)
    begin
        if (ap_sig_bdd_47) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_57)
    begin
        if (ap_sig_bdd_57) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_ioackin_outs_TREADY assign process. --
    ap_sig_ioackin_outs_TREADY_assign_proc : process(outs_TREADY, ap_reg_ioackin_outs_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_outs_TREADY)) then 
            ap_sig_ioackin_outs_TREADY <= outs_TREADY;
        else 
            ap_sig_ioackin_outs_TREADY <= ap_const_logic_1;
        end if; 
    end process;

    b_fu_526_p1 <= tmp_data_V_3_fu_186(8 - 1 downto 0);
    exitcond_flatten_fu_389_p2 <= "1" when (indvar_flatten_reg_292 = ap_const_lv20_E1000) else "0";
    exitcond_fu_401_p2 <= "1" when (x_reg_314 = ap_const_lv11_500) else "0";
    g_fu_530_p4 <= tmp_data_V_3_fu_186(15 downto 8);
    grp_fu_338_p1 <= ins_TUSER;

    -- grp_fu_806_ce assign process. --
    grp_fu_806_ce_assign_proc : process(lap_fil_enable_V_read_read_fu_210_p2, exitcond_flatten_reg_925, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_77, ap_reg_ppiten_pp0_it0, ap_sig_ioackin_outs_TREADY, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then 
            grp_fu_806_ce <= ap_const_logic_1;
        else 
            grp_fu_806_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_806_p0 <= y_1_fu_777_p2;
    grp_fu_806_p1 <= ap_const_lv32_10101(18 - 1 downto 0);
    icmp1_fu_439_p2 <= "1" when (tmp_fu_429_p4 = ap_const_lv9_0) else "0";
    icmp2_fu_498_p2 <= "1" when (tmp_12_fu_488_p4 = ap_const_lv10_0) else "0";
    icmp_fu_800_p2 <= "1" when (signed(tmp_11_fu_790_p4) > signed(ap_const_lv24_0)) else "0";
    indvar_flatten_next_fu_395_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_292) + unsigned(ap_const_lv20_1));

    -- ins_TREADY assign process. --
    ins_TREADY_assign_proc : process(ins_TVALID, lap_fil_enable_V_read_read_fu_210_p2, ap_sig_cseq_ST_st2_fsm_1, exitcond_flatten_fu_389_p2, exitcond_flatten_reg_925, ap_sig_cseq_ST_pp0_stg0_fsm_2, lap_user_V_fu_471_p2, ap_sig_bdd_77, ap_reg_ppiten_pp0_it0, ap_sig_ioackin_outs_TREADY, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it6)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ins_TVALID = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond_flatten_fu_389_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = lap_user_V_fu_471_p2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))))))) then 
            ins_TREADY <= ap_const_logic_1;
        else 
            ins_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    lap_fil_enable_V_read_read_fu_210_p2 <= lap_fil_enable_V;
    lap_last_V_fu_510_p2 <= "1" when (x_mid2_fu_407_p3 = ap_const_lv11_4FF) else "0";
    lap_user_V_fu_471_p2 <= "1" when (tmp_2_fu_463_p3 = ap_const_lv11_0) else "0";
    line_buf_0_address0 <= tmp_5_fu_482_p1(11 - 1 downto 0);
    line_buf_0_address1 <= line_buf_0_addr_reg_944;

    -- line_buf_0_ce0 assign process. --
    line_buf_0_ce0_assign_proc : process(lap_fil_enable_V_read_read_fu_210_p2, exitcond_flatten_reg_925, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_77, ap_reg_ppiten_pp0_it0, ap_sig_ioackin_outs_TREADY, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then 
            line_buf_0_ce0 <= ap_const_logic_1;
        else 
            line_buf_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- line_buf_0_ce1 assign process. --
    line_buf_0_ce1_assign_proc : process(lap_fil_enable_V_read_read_fu_210_p2, exitcond_flatten_reg_925, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_77, ap_reg_ppiten_pp0_it0, ap_sig_ioackin_outs_TREADY, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then 
            line_buf_0_ce1 <= ap_const_logic_1;
        else 
            line_buf_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buf_0_d1 <= line_buf_1_q0;

    -- line_buf_0_we1 assign process. --
    line_buf_0_we1_assign_proc : process(lap_fil_enable_V_read_read_fu_210_p2, exitcond_flatten_reg_925, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_77, ap_reg_ppiten_pp0_it0, ap_sig_ioackin_outs_TREADY, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it6)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond_flatten_reg_925 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))))))) then 
            line_buf_0_we1 <= ap_const_logic_1;
        else 
            line_buf_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buf_1_address0 <= tmp_5_fu_482_p1(11 - 1 downto 0);
    line_buf_1_address1 <= ap_reg_ppstg_line_buf_1_addr_reg_950_pp0_it3;

    -- line_buf_1_ce0 assign process. --
    line_buf_1_ce0_assign_proc : process(lap_fil_enable_V_read_read_fu_210_p2, exitcond_flatten_reg_925, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_77, ap_reg_ppiten_pp0_it0, ap_sig_ioackin_outs_TREADY, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then 
            line_buf_1_ce0 <= ap_const_logic_1;
        else 
            line_buf_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- line_buf_1_ce1 assign process. --
    line_buf_1_ce1_assign_proc : process(lap_fil_enable_V_read_read_fu_210_p2, exitcond_flatten_reg_925, ap_sig_bdd_77, ap_reg_ppiten_pp0_it0, ap_sig_ioackin_outs_TREADY, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it6)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))))) then 
            line_buf_1_ce1 <= ap_const_logic_1;
        else 
            line_buf_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buf_1_d1 <= pix_mat_2_1_1_reg_1008;

    -- line_buf_1_we1 assign process. --
    line_buf_1_we1_assign_proc : process(lap_fil_enable_V_read_read_fu_210_p2, exitcond_flatten_reg_925, ap_sig_bdd_77, ap_reg_ppiten_pp0_it0, ap_sig_ioackin_outs_TREADY, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it6)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or ((ap_const_logic_0 = ap_sig_ioackin_outs_TREADY) and not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6))))))) then 
            line_buf_1_we1 <= ap_const_logic_1;
        else 
            line_buf_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    newSel4_cast_fu_817_p3 <= 
        ap_const_lv32_0 when (ap_reg_ppstg_or_cond_reg_1029_pp0_it5(0) = '1') else 
        ap_const_lv32_FFFFFF;
    or_cond_13_fu_504_p2 <= (icmp2_fu_498_p2 or icmp1_fu_439_p2);
    or_cond_fu_812_p2 <= (ap_reg_ppstg_or_cond_13_reg_956_pp0_it3 or tmp_10_fu_782_p3);

    -- outs_TDATA assign process. --
    outs_TDATA_assign_proc : process(ap_sig_bdd_77, ap_reg_ppiten_pp0_it0, tmp_data_V_3_fu_186, tmp_data_V_4_fu_828_p3, ap_sig_bdd_265, ap_sig_bdd_681)
    begin
        if (not((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then
            if (ap_sig_bdd_681) then 
                outs_TDATA <= tmp_data_V_4_fu_828_p3;
            elsif (ap_sig_bdd_265) then 
                outs_TDATA <= tmp_data_V_3_fu_186;
            else 
                outs_TDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            outs_TDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- outs_TDEST assign process. --
    outs_TDEST_assign_proc : process(ap_sig_bdd_77, ap_reg_ppiten_pp0_it0, tmp_dest_V_3_fu_206, ap_sig_bdd_265, ap_sig_bdd_681)
    begin
        if (not((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then
            if (ap_sig_bdd_681) then 
                outs_TDEST <= ap_const_lv1_0;
            elsif (ap_sig_bdd_265) then 
                outs_TDEST <= tmp_dest_V_3_fu_206;
            else 
                outs_TDEST <= "X";
            end if;
        else 
            outs_TDEST <= "X";
        end if; 
    end process;


    -- outs_TID assign process. --
    outs_TID_assign_proc : process(ap_sig_bdd_77, ap_reg_ppiten_pp0_it0, tmp_id_V_3_fu_202, ap_sig_bdd_265, ap_sig_bdd_681)
    begin
        if (not((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then
            if (ap_sig_bdd_681) then 
                outs_TID <= ap_const_lv1_0;
            elsif (ap_sig_bdd_265) then 
                outs_TID <= tmp_id_V_3_fu_202;
            else 
                outs_TID <= "X";
            end if;
        else 
            outs_TID <= "X";
        end if; 
    end process;


    -- outs_TKEEP assign process. --
    outs_TKEEP_assign_proc : process(ap_sig_bdd_77, ap_reg_ppiten_pp0_it0, tmp_keep_V_3_fu_190, ap_sig_bdd_265, ap_sig_bdd_681)
    begin
        if (not((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then
            if (ap_sig_bdd_681) then 
                outs_TKEEP <= ap_const_lv4_0;
            elsif (ap_sig_bdd_265) then 
                outs_TKEEP <= tmp_keep_V_3_fu_190;
            else 
                outs_TKEEP <= "XXXX";
            end if;
        else 
            outs_TKEEP <= "XXXX";
        end if; 
    end process;


    -- outs_TLAST assign process. --
    outs_TLAST_assign_proc : process(ap_sig_bdd_77, ap_reg_ppiten_pp0_it0, ap_reg_ppstg_lap_last_V_reg_961_pp0_it5, tmp_last_V_4_fu_198, ap_sig_bdd_265, ap_sig_bdd_681)
    begin
        if (not((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then
            if (ap_sig_bdd_681) then 
                outs_TLAST <= ap_reg_ppstg_lap_last_V_reg_961_pp0_it5;
            elsif (ap_sig_bdd_265) then 
                outs_TLAST <= tmp_last_V_4_fu_198;
            else 
                outs_TLAST <= "X";
            end if;
        else 
            outs_TLAST <= "X";
        end if; 
    end process;


    -- outs_TSTRB assign process. --
    outs_TSTRB_assign_proc : process(ap_sig_bdd_77, ap_reg_ppiten_pp0_it0, tmp_strb_V_3_fu_194, ap_sig_bdd_265, ap_sig_bdd_681)
    begin
        if (not((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then
            if (ap_sig_bdd_681) then 
                outs_TSTRB <= ap_const_lv4_0;
            elsif (ap_sig_bdd_265) then 
                outs_TSTRB <= tmp_strb_V_3_fu_194;
            else 
                outs_TSTRB <= "XXXX";
            end if;
        else 
            outs_TSTRB <= "XXXX";
        end if; 
    end process;


    -- outs_TUSER assign process. --
    outs_TUSER_assign_proc : process(ap_sig_bdd_77, ap_reg_ppiten_pp0_it0, ap_reg_ppstg_lap_user_V_reg_939_pp0_it5, tmp_user_V_2_fu_182, ap_sig_bdd_265, ap_sig_bdd_681)
    begin
        if (not((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)))) then
            if (ap_sig_bdd_681) then 
                outs_TUSER <= ap_reg_ppstg_lap_user_V_reg_939_pp0_it5;
            elsif (ap_sig_bdd_265) then 
                outs_TUSER <= tmp_user_V_2_fu_182;
            else 
                outs_TUSER <= "X";
            end if;
        else 
            outs_TUSER <= "X";
        end if; 
    end process;


    -- outs_TVALID assign process. --
    outs_TVALID_assign_proc : process(lap_fil_enable_V_read_read_fu_210_p2, exitcond_flatten_reg_925, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_77, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it6, ap_reg_ioackin_outs_TREADY)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond_flatten_reg_925 = ap_const_lv1_0) and (lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_logic_0 = ap_reg_ioackin_outs_TREADY)) or (not((lap_fil_enable_V_read_read_fu_210_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and not((ap_sig_bdd_77 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) and (ap_const_logic_0 = ap_reg_ioackin_outs_TREADY)))) then 
            outs_TVALID <= ap_const_logic_1;
        else 
            outs_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    pix_mat_0_0_cast_fu_604_p1 <= std_logic_vector(resize(unsigned(pix_mat_0_0_fu_162),25));
    pix_mat_0_1_1_fu_621_p1 <= std_logic_vector(resize(unsigned(line_buf_0_load_reg_976),24));
    pix_mat_0_1_cast_fu_600_p1 <= std_logic_vector(resize(unsigned(pix_mat_0_1_fu_166),25));
    pix_mat_0_2_cast6_fu_624_p1 <= std_logic_vector(resize(unsigned(line_buf_0_load_reg_976),25));
    pix_mat_1_0_cast_fu_596_p1 <= std_logic_vector(resize(unsigned(pix_mat_1_0_fu_174),25));
    pix_mat_1_1_1_fu_627_p1 <= std_logic_vector(resize(unsigned(line_buf_1_load_reg_982),24));
    pix_mat_1_2_fu_725_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_line_buf_1_load_reg_982_pp0_it2),32));
    pix_mat_2_0_cast_fu_712_p1 <= std_logic_vector(resize(unsigned(pix_mat_2_0_fu_170),32));
    pix_mat_2_1_cast_fu_716_p1 <= std_logic_vector(resize(unsigned(pix_mat_2_1_fu_158),32));
    sum2_i_cast_fu_686_p1 <= std_logic_vector(resize(unsigned(sum2_i_fu_680_p2),32));
    sum2_i_fu_680_p2 <= std_logic_vector(unsigned(tmp3_cast_fu_676_p1) + unsigned(tmp2_cast_fu_666_p1));
    sum3_neg_i_fu_690_p2 <= std_logic_vector(unsigned(tmp_i1_fu_656_p1) - unsigned(sum2_i_cast_fu_686_p1));
    tmp1_fu_643_p2 <= std_logic_vector(unsigned(tmp_4_i_cast_fu_639_p1) + unsigned(tmp_3_i_reg_993));
    tmp2_cast_fu_666_p1 <= std_logic_vector(resize(unsigned(tmp2_fu_660_p2),26));
    tmp2_fu_660_p2 <= std_logic_vector(unsigned(pix_mat_0_1_cast_fu_600_p1) + unsigned(pix_mat_0_0_cast_fu_604_p1));
    tmp3_cast_fu_676_p1 <= std_logic_vector(resize(unsigned(tmp3_fu_670_p2),26));
    tmp3_fu_670_p2 <= std_logic_vector(unsigned(pix_mat_0_2_cast6_fu_624_p1) + unsigned(pix_mat_1_0_cast_fu_596_p1));
    tmp_10_fu_782_p3 <= y_1_fu_777_p2(31 downto 31);
    tmp_11_fu_790_p4 <= y_1_fu_777_p2(31 downto 8);
    tmp_12_fu_488_p4 <= x_mid2_fu_407_p3(10 downto 1);
    tmp_2_fu_463_p3 <= (tmp_6_fu_455_p3 & tmp_4_fu_449_p2);
    tmp_2_i_fu_731_p0 <= tmp_2_i_fu_731_p00(8 - 1 downto 0);
    tmp_2_i_fu_731_p00 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_r_reg_988_pp0_it2),16));
    tmp_2_i_fu_731_p2 <= std_logic_vector(resize(unsigned(tmp_2_i_fu_731_p0) * unsigned(ap_const_lv16_4D), 16));
    tmp_3_fu_445_p1 <= x_mid2_fu_407_p3(10 - 1 downto 0);
    tmp_3_i_fu_554_p0 <= tmp_3_i_fu_554_p00(8 - 1 downto 0);
    tmp_3_i_fu_554_p00 <= std_logic_vector(resize(unsigned(g_fu_530_p4),16));
    tmp_3_i_fu_554_p2 <= std_logic_vector(resize(unsigned(tmp_3_i_fu_554_p0) * unsigned(ap_const_lv16_96), 16));
    tmp_4_fu_449_p2 <= (tmp_3_fu_445_p1 or y_mid2_fu_421_p3);
    tmp_4_i_cast_fu_639_p1 <= std_logic_vector(resize(unsigned(tmp_4_i_fu_633_p2),16));
    tmp_4_i_fu_633_p0 <= tmp_4_i_fu_633_p00(8 - 1 downto 0);
    tmp_4_i_fu_633_p00 <= std_logic_vector(resize(unsigned(b_reg_971),14));
    tmp_4_i_fu_633_p2 <= std_logic_vector(resize(unsigned(tmp_4_i_fu_633_p0) * unsigned(ap_const_lv14_1D), 14));
    tmp_5_fu_482_p1 <= std_logic_vector(resize(unsigned(x_mid2_fu_407_p3),64));
    tmp_6_fu_455_p3 <= x_mid2_fu_407_p3(10 downto 10);
    tmp_6_i_fu_757_p2 <= std_logic_vector(unsigned(tmp_i1_12_fu_752_p2) - unsigned(pix_mat_2_0_cast_fu_712_p1));
    tmp_7_i_fu_763_p2 <= std_logic_vector(unsigned(tmp_6_i_fu_757_p2) - unsigned(pix_mat_2_1_cast_fu_716_p1));
    tmp_8_fu_824_p2 <= (ap_reg_ppstg_or_cond_reg_1029_pp0_it5 or ap_reg_ppstg_icmp_reg_1024_pp0_it5);
    tmp_9_fu_648_p3 <= (pix_mat_1_1_fu_178 & ap_const_lv3_0);
    tmp_data_V_4_fu_828_p3 <= 
        newSel4_cast_fu_817_p3 when (tmp_8_fu_824_p2(0) = '1') else 
        grp_fu_806_p2;
    tmp_fu_429_p4 <= y_mid2_fu_421_p3(9 downto 1);
    tmp_i1_12_fu_752_p2 <= std_logic_vector(unsigned(sum3_neg_i_reg_1003) - unsigned(pix_mat_1_2_fu_725_p1));
    tmp_i1_fu_656_p1 <= std_logic_vector(resize(unsigned(tmp_9_fu_648_p3),32));
    x_1_fu_516_p2 <= std_logic_vector(unsigned(x_mid2_fu_407_p3) + unsigned(ap_const_lv11_1));
    x_mid2_fu_407_p3 <= 
        ap_const_lv11_0 when (exitcond_fu_401_p2(0) = '1') else 
        x_reg_314;
    y_1_fu_777_p2 <= std_logic_vector(unsigned(tmp_7_i_reg_1014) - unsigned(y_4_cast_fu_774_p1));
    y_4_cast_fu_774_p1 <= std_logic_vector(resize(unsigned(pix_mat_2_1_1_reg_1008),32));
    y_f_fu_737_p2 <= std_logic_vector(unsigned(tmp1_reg_998) + unsigned(tmp_2_i_fu_731_p2));
    y_mid2_fu_421_p3 <= 
        y_s_fu_415_p2 when (exitcond_fu_401_p2(0) = '1') else 
        y_phi_fu_307_p4;

    -- y_phi_fu_307_p4 assign process. --
    y_phi_fu_307_p4_assign_proc : process(y_reg_303, exitcond_flatten_reg_925, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, y_mid2_reg_934)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond_flatten_reg_925 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            y_phi_fu_307_p4 <= y_mid2_reg_934;
        else 
            y_phi_fu_307_p4 <= y_reg_303;
        end if; 
    end process;

    y_s_fu_415_p2 <= std_logic_vector(unsigned(y_phi_fu_307_p4) + unsigned(ap_const_lv10_1));
end behav;
